generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model MainCategory {
  id            Int           @id @default(autoincrement())
  name          String        @unique
  subcategories Subcategory[]
  expenses      Expense[]
  incomes       Income[]
}

model Subcategory {
  id             Int           @id @default(autoincrement())
  name           String
  mainCategory   MainCategory  @relation(fields: [mainCategoryId], references: [id], onDelete: Cascade)
  mainCategoryId Int
  expenses       Expense[]
  incomes        Income[]

  @@unique([name, mainCategoryId])
}

model Expense {
  id             Int          @id @default(autoincrement())
  description    String
  amount         Decimal      @db.Decimal(10,2)
  date           DateTime
  createdAt      DateTime     @default(now())
  mainCategory   MainCategory @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId Int
  subcategory    Subcategory  @relation(fields: [subcategoryId], references: [id])
  subcategoryId  Int
}

model Deadline {
  id        Int      @id @default(autoincrement())
  description String
  amount    Decimal  @db.Decimal(10,2)
  dueDate   DateTime
  paid      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Income {
  id             Int          @id @default(autoincrement())
  description    String
  amount         Decimal      @db.Decimal(10,2)
  date           DateTime
  createdAt      DateTime     @default(now())
  mainCategory   MainCategory @relation(fields: [mainCategoryId], references: [id])
  mainCategoryId Int
  subcategory    Subcategory  @relation(fields: [subcategoryId], references: [id])
  subcategoryId  Int
}

model User {
  id           Int      @id @default(autoincrement())
  username     String   @unique
  passwordHash String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
}

